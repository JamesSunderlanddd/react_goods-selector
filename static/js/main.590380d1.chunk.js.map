{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","toggler","good","setState","alreadyInSelectedGoods","filter","item","find","selectedGoodsInfoForUser","length","slice","join","className","this","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,MACA,QACA,cACA,OACA,UACA,UACA,QACA,YACA,QACA,SAOIC,E,4MACJC,MAAQ,CACNC,cAAe,I,EAGjBC,QAAU,SAACC,GACLA,GACF,EAAKC,UAAS,SAACJ,GACb,OAAQ,EAAKK,uBAAuBF,GAEhC,CAAEF,cAAeD,EAAMC,cAAcK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,MAD7D,CAAEF,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAMpDE,uBAAyB,SAACF,GACxB,OAAO,EAAKH,MAAMC,cAAcO,MAAK,SAAAD,GAAI,OAAIA,IAASJ,M,EAGxDM,yBAA2B,WACzB,IAAQR,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcS,QACpB,KAAK,EACH,MAAO,yBACT,KAAK,EACH,MAAM,GAAN,OAAUT,EAAc,GAAxB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBACF,QACE,MAAM,GAAN,OAAUA,EAAcU,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDX,EAAcU,OAAO,GAA5E,mB,4CAIN,WAAU,IAAD,OACP,OACE,qBAAKE,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGC,KAAKL,6BAER,wBACEM,KAAK,SACLF,UAAU,oBACVG,QAAS,WACP,EAAKZ,SAAS,CAAEH,cAAe,MAJnC,oBAUF,oBAAIY,UAAU,YAAd,SACGf,EAAgBmB,KAAI,SAACd,GACpB,OACE,qBAAeU,UAAW,EAAKR,uBAAuBF,GAAQ,qBAAuB,OAArF,UACGA,EACD,wBACEY,KAAK,SACLF,UAAU,mBACVG,QAAS,kBAAM,EAAKd,QAAQC,IAH9B,SAKI,EAAKE,uBAAuBF,GAAgB,SAAR,UAPjCA,iB,GAvDPe,IAAMC,WA0ETpB,IC3FfqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.590380d1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Sex',\n  'Drugs',\n  'Rock-n-Roll',\n  'Love',\n  'Passion',\n  'Alcohol',\n  'Party',\n  'Adventure',\n  'Laugh',\n  'Money',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: [],\n  };\n\n  toggler = (good: string) => {\n    if (good) {\n      this.setState((state) => {\n        return !this.alreadyInSelectedGoods(good)\n          ? { selectedGoods: [...state.selectedGoods, good] }\n          : { selectedGoods: state.selectedGoods.filter(item => item !== good) };\n      });\n    }\n  };\n\n  alreadyInSelectedGoods = (good: string) => {\n    return this.state.selectedGoods.find(item => item === good);\n  };\n\n  selectedGoodsInfoForUser = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'Choose Things To Enjoy';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      case 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)} are selected`;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App__container\">\n          <div className=\"App__top-section\">\n            <h1 className=\"App__goods-info\">\n              {this.selectedGoodsInfoForUser()}\n            </h1>\n            <button\n              type=\"button\"\n              className=\"App__close-button\"\n              onClick={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n            >\n              XXX\n            </button>\n          </div>\n          <ul className=\"App__list\">\n            {goodsFromServer.map((good) => {\n              return (\n                <li key={good} className={this.alreadyInSelectedGoods(good) ? 'list list-selected' : 'list'}>\n                  {good}\n                  <button\n                    type=\"button\"\n                    className=\"App__button-list\"\n                    onClick={() => this.toggler(good)}\n                  >\n                    {!this.alreadyInSelectedGoods(good) ? 'Add' : 'Remove'}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}